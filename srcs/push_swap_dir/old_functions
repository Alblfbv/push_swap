t_struct	ft_pivot_a_end(t_list **s_a, t_list **s_b, t_struct *data)
{
	data->list = 'A';
	data->start = *s_a;
	data = ft_find_median(data);
	while (*s_a != data->end && !(data->end_start))
	{
		if (*s_a == data->pivot)
			ft_printf("%s\n", ft_swap_a(s_a, s_b));
		if (*s_a == data->end)
			data->end_start = 1;
		if (*(int*)(*s_a)->content < *(int*)data->pivot->content)
		{
			ft_printf("%s\n", ft_push_b(s_a, s_b));
			if (data->first_push == NULL)
				data->first_push = *s_b;
		}
		else if (*(int*)(*s_a)->content > *(int*)data->pivot->content)
			ft_printf("%s\n", ft_rotate_a(s_a, s_b));
	}
	ft_printf("%s\n", ft_push_b(s_a, s_b));
	data->end = ft_lst_end(*s_a);
	return (*data);
}

t_struct	ft_pivot_b_end(t_list **s_a, t_list **s_b, t_struct *data)
{
	data->list = 'B';
	data->start = *s_b;
	data = ft_find_median(data);

	ft_printf("%s\n", ft_push_a(s_a, s_b));
	while (*s_b != data->end && !(data->end_start))
	{
		if (*s_b == data->pivot)
			ft_printf("%s\n", ft_swap_b(s_a, s_b));
		if (*s_b == data->end)
			data->end_start = 1;
		if (*(int*)(*s_b)->content > *(int*)data->pivot->content)
		{
			ft_printf("%s\n", ft_push_a(s_a, s_b));
			if (data->first_push == NULL)
				data->first_push = *s_a;
		}
		else if (*(int*)(*s_b)->content < *(int*)data->pivot->content)
			ft_printf("%s\n", ft_rotate_b(s_a, s_b));
	}
	data->end = ft_lst_end(*s_b);
	return (*data);
}

